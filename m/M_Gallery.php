<?phpclass M_Gallery extends Model{	private static $instance;	// экземпляр класса	public static function Instance()	{		if (self::$instance == null)			self::$instance = new self();					return self::$instance;	}		public function __construct(){		parent::__construct('gallery', 'id_gallery');	}	public function get_images($id_gallery, $is_show = false)	{			$id_gallery = (int)$id_gallery;		$lang = I18n::language();		$dop_where = ($is_show) ? " AND i18n.is_show = '1'" : '';					return $this->db->Select("SELECT * FROM gallery_images 								 LEFT JOIN images using(id_image)								 LEFT JOIN i18n using(id_image)								 WHERE id_gallery = '$id_gallery' AND id_lang = '$lang' $dop_where								 ORDER BY num_sort ASC");	}		public function add_image($id_gallery, $id_image)	{		return $this->db->Insert('gallery_images', array('id_gallery' => (int)$id_gallery,						'id_image' => (int)$id_image));	}		public function delete_image($id_gallery, $id_image)	{		$id_gallery = (int)$id_gallery;		$id_image = (int)$id_image;		$this->db->Delete('gallery_images', "id_gallery='$id_gallery' 						   AND id_image='$id_image'");		return M_Images::Instance()->delete($id_image);	}	public function delete_gallery($id_gallery)	{		$id_gallery = (int)$id_gallery;		// удаляем файлы		foreach($this->get_images($id_gallery) as $image) {			$this->delete_image($id_gallery, $image['id_image']);		}		// чистим базу		$this->db->Delete('gallery_images', "id_gallery='$id_gallery'");		parent::delete($id_gallery);	}	public function sorting($id_gallery, $images)	{		$id_gallery = (int)$id_gallery;		$obj = array();				for($i = 0; $i < count($images); $i++)		{			$id_image = (int)$images[$i];			$where = "id_gallery='$id_gallery' AND id_image='$id_image'";			$obj['num_sort'] = $i;			$this->db->Update('gallery_images', $obj, $where);		}				Cache::mb_clear($this->table);		return true;	}}